{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\josel\\\\class-based\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\josel\\\\class-based\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\josel\\\\class-based\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\josel\\\\class-based\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\josel\\\\class-based\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\josel\\\\class-based\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\josel\\\\class-based\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Person from './Person/Person';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      persons: [{\n        id: 'ewre1',\n        name: 'Max',\n        age: 28\n      }, {\n        id: 'ewre2',\n        name: 'Manu',\n        age: 29\n      }, {\n        id: 'ewre3',\n        name: 'Stephanie',\n        age: 26\n      }],\n      otherState: 'some other value',\n      displayNames: false\n    };\n\n    _this.toggleUsersHandler = function () {\n      var doesShow = _this.state.displayNames;\n\n      _this.setState({\n        displayNames: !doesShow\n      });\n    };\n\n    _this.deletePersonHandler = function (personIndex) {\n      //const persons = this.state.persons.slice();//Slice with no arguments simply creates a copy of the array\n      //You can use the spread operator instead\n      var persons = _toConsumableArray(_this.state.persons);\n\n      persons.splice(personIndex, 1);\n\n      _this.setState({\n        persons: persons\n      });\n    };\n\n    _this.nameChangedHandler = function (event, id) {}\n    /*const personIndex = this.state.persons.findIndex(p => {\n      return p.id === id;\n    });\n     const person = {\n      ...this.state.persons[personIndex]\n    };\n     person.name = event.target.value;\n     const persons = {...this.state.persons};\n    persons[personIndex] = person; \n    // const person = Object.assign({}, this.state.persons[personIndex]); //another possible way\n     this.setState( {persons : persons} );\n     // console.log('Was clicked!');\n    // DON'T DO THIS: this.state.persons[0].name = 'Maximilian';\n    /*this.setState({\n      persons: [\n        { name: 'Max', age: 28 },\n        { name: event.target.value, age: 29 },\n        { name: 'Stephanie', age: 26 }\n      ]\n    });*/\n    //This way may be inneficient () => this.switchNameHandler(\"Maximiliano!!!\")\n    ;\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var buttonOneStyle = {\n        backgroundColor: 'white',\n        font: 'inherit',\n        border: '1px solid blue',\n        padding: '8px',\n        cursor: 'pointer'\n      };\n      var persons = null;\n\n      if (this.state.displayNames) {\n        persons = /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 7\n          }\n        }, this.state.persons.map(function (person, index) {\n          return /*#__PURE__*/React.createElement(Person, {\n            click: function click() {\n              return _this2.deletePersonHandler(index);\n            },\n            name: person.name,\n            age: person.age,\n            key: person.id,\n            changed: function changed(event) {\n              return _this2.nameChangedHandler(event, person.id);\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }\n          });\n        }));\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }\n      }, \"Hi, I'm a React App\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }\n      }, \"This is really working again!\"), /*#__PURE__*/React.createElement(\"button\", {\n        style: buttonOneStyle,\n        onClick: this.toggleUsersHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }\n      }, \"togglePersons\"), persons); // return React.createElement('div', {className: 'App'}, React.createElement('h1', null, 'Does this work now?'));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:/Users/josel/class-based/src/App.js"],"names":["React","Component","Person","App","state","persons","id","name","age","otherState","displayNames","toggleUsersHandler","doesShow","setState","deletePersonHandler","personIndex","splice","nameChangedHandler","event","buttonOneStyle","backgroundColor","font","border","padding","cursor","map","person","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Person from './Person/Person';\n\nclass App extends Component {\n  state = {\n    persons: [\n      { id: 'ewre1', name: 'Max', age: 28 },\n      { id: 'ewre2', name: 'Manu', age: 29 },\n      { id: 'ewre3', name: 'Stephanie', age: 26 }\n    ],\n    otherState: 'some other value',\n    displayNames : false\n  };\n\n  toggleUsersHandler = ()=> {\n    const doesShow = this.state.displayNames;\n    this.setState({displayNames : !doesShow});\n  }\n\n  deletePersonHandler = (personIndex) => {\n    //const persons = this.state.persons.slice();//Slice with no arguments simply creates a copy of the array\n    //You can use the spread operator instead\n    const persons = [...this.state.persons];\n    persons.splice(personIndex, 1);\n    this.setState({persons : persons});\n  }\n\n  nameChangedHandler = (event, id) => {\n    /*const personIndex = this.state.persons.findIndex(p => {\n      return p.id === id;\n    });\n\n    const person = {\n      ...this.state.persons[personIndex]\n    };\n\n    person.name = event.target.value;\n\n    const persons = {...this.state.persons};\n    persons[personIndex] = person; \n\n   // const person = Object.assign({}, this.state.persons[personIndex]); //another possible way\n\n    this.setState( {persons : persons} );\n\n    // console.log('Was clicked!');\n    // DON'T DO THIS: this.state.persons[0].name = 'Maximilian';\n    /*this.setState({\n      persons: [\n        { name: 'Max', age: 28 },\n        { name: event.target.value, age: 29 },\n        { name: 'Stephanie', age: 26 }\n      ]\n    });*/\n  }\n//This way may be inneficient () => this.switchNameHandler(\"Maximiliano!!!\")\n  render() {\n    const buttonOneStyle = {\n      backgroundColor:'white',\n      font:'inherit',\n      border:'1px solid blue',\n      padding:'8px',\n      cursor:'pointer'\n    };\n\n    let persons = null;\n    if(this.state.displayNames){\n      persons = (\n      <div>\n        {this.state.persons.map((person, index) => {\n         return <Person click={() => this.deletePersonHandler(index)}\n          name = {person.name} \n          age = {person.age}\n          key = {person.id}\n          changed = {(event) => this.nameChangedHandler(event, person.id)} />\n        })}\n      </div>\n      );   \n        \n    }\n    \n\n    return (\n      <div className=\"App\">\n        <h1>Hi, I'm a React App</h1>\n        <p>This is really working again!</p>\n        \n        <button style= {buttonOneStyle} onClick={this.toggleUsersHandler}>togglePersons</button>\n        \n          {persons}\n         \n          \n        \n      </div>\n    );\n    // return React.createElement('div', {className: 'App'}, React.createElement('h1', null, 'Does this work now?'));\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}