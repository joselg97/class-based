{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\josel\\\\class-based\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"C:\\\\Users\\\\josel\\\\class-based\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\josel\\\\class-based\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\josel\\\\class-based\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\josel\\\\class-based\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\josel\\\\class-based\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\josel\\\\class-based\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\josel\\\\class-based\\\\src\\\\Containers\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.module.css';\nimport Person from '../Components/Persons/Person/Person';\nimport classes from './App.module.css';\nimport ErrorBoundary from '../Components/ErrorBoundary/ErrorBoundary';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      persons: [{\n        id: 'ewre1',\n        name: 'Max',\n        age: 28\n      }, {\n        id: 'ewre2',\n        name: 'Manu',\n        age: 29\n      }, {\n        id: 'ewre3',\n        name: 'Stephanie',\n        age: 26\n      }],\n      otherState: 'some other value',\n      displayNames: false\n    };\n\n    _this.toggleUsersHandler = function () {\n      var doesShow = _this.state.displayNames;\n\n      _this.setState({\n        displayNames: !doesShow\n      });\n    };\n\n    _this.deletePersonHandler = function (personIndex) {\n      //const persons = this.state.persons.slice();//Slice with no arguments simply creates a copy of the array\n      //You can use the spread operator instead\n      var persons = _toConsumableArray(_this.state.persons);\n\n      persons.splice(personIndex, 1);\n\n      _this.setState({\n        persons: persons\n      });\n    };\n\n    _this.nameChangedHandler = function (event, id) {\n      var personIndex = _this.state.persons.findIndex(function (p) {\n        return p.id === id;\n      });\n\n      var person = _objectSpread({}, _this.state.persons[personIndex]); // const person = Object.assign({}, this.state.persons[personIndex]);\n\n\n      person.name = event.target.value;\n\n      var persons = _toConsumableArray(_this.state.persons);\n\n      persons[personIndex] = person;\n\n      _this.setState({\n        persons: persons\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n\n    /*nameChangedHandler = (event, id) => {\n      //console.log(\"calling changed name handler\");\n      const personIndex = this.state.persons.findIndex(p => {\n        return p.id === id;\n      });\n      \n      const person = {\n        ...this.state.persons[personIndex]\n      };\n      person.name = event.target.value;\n      const persons = {...this.state.persons};//-<---The error was here\n      persons[personIndex] = person; \n      this.setState({persons : persons});\n    }\n    //This way may be inneficient () => this.switchNameHandler(\"Maximiliano!!!\")\n    */\n    value: function render() {\n      var _this2 = this;\n\n      /*const buttonOneStyle = {\n        backgroundColor:'green',\n        color:'white',\n        font:'inherit',\n        border:'1px solid blue',\n        padding:'8px',\n        cursor:'pointer',\n        ':hover':{\n          backgroundColor: 'lightgreen',\n          color: 'black'\n        }\n        \n      };*/\n      var persons = null;\n      var btnClass = '';\n\n      if (this.state.displayNames) {\n        persons = /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 7\n          }\n        }, this.state.persons.map(function (person, index) {\n          return /*#__PURE__*/React.createElement(ErrorBoundary, {\n            key: person.id,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(Person, {\n            click: function click() {\n              return _this2.deletePersonHandler(index);\n            },\n            name: person.name,\n            age: person.age,\n            changed: function changed(event) {\n              return _this2.nameChangedHandler(event, person.id);\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 50\n            }\n          }));\n        }));\n        btnClass = classes.Red;\n      }\n\n      var assignedClasses = []; //changed name from classes since classes now refers to our input on top of the .css file\n\n      if (this.state.persons.length <= 2) {\n        assignedClasses.push(classes.red); //classes = ['red']\n      }\n\n      if (this.state.persons.length <= 1) {\n        assignedClasses.push(classes.bold); //classes = ['red', 'bold']\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.App,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }\n      }, \"Hi, I'm a React App\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: assignedClasses.join(' '),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }\n      }, \"This is really working again!\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: btnClass,\n        onClick: this.toggleUsersHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }\n      }, \"togglePersons\"), persons); // return React.createElement('div', {className: 'App'}, React.createElement('h1', null, 'Does this work now?'));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:/Users/josel/class-based/src/Containers/App.js"],"names":["React","Component","Person","classes","ErrorBoundary","App","state","persons","id","name","age","otherState","displayNames","toggleUsersHandler","doesShow","setState","deletePersonHandler","personIndex","splice","nameChangedHandler","event","findIndex","p","person","target","value","btnClass","map","index","Red","assignedClasses","length","push","red","bold","join"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.module.css';\nimport Person from '../Components/Persons/Person/Person';\nimport classes from './App.module.css';\nimport ErrorBoundary from '../Components/ErrorBoundary/ErrorBoundary';\n\n\n\n\n\nclass App extends Component {\n  state = {\n    persons: [\n      { id: 'ewre1', name: 'Max', age: 28 },\n      { id: 'ewre2', name: 'Manu', age: 29 },\n      { id: 'ewre3', name: 'Stephanie', age: 26 }\n    ],\n    otherState: 'some other value',\n    displayNames : false\n  };\n\n  toggleUsersHandler = ()=> {\n    const doesShow = this.state.displayNames;\n    this.setState({displayNames : !doesShow});\n  }\n\n  deletePersonHandler = (personIndex) => {\n    //const persons = this.state.persons.slice();//Slice with no arguments simply creates a copy of the array\n    //You can use the spread operator instead\n    const persons = [...this.state.persons];\n    persons.splice(personIndex, 1);\n    this.setState({persons : persons});\n  }\n\n  nameChangedHandler = ( event, id ) => {\n    const personIndex = this.state.persons.findIndex(p => {\n      return p.id === id;\n    });\n\n    const person = {\n      ...this.state.persons[personIndex]\n    };\n\n    // const person = Object.assign({}, this.state.persons[personIndex]);\n\n    person.name = event.target.value;\n\n    const persons = [...this.state.persons];\n    persons[personIndex] = person;\n\n    this.setState( {persons: persons} );\n  } \n\n  /*nameChangedHandler = (event, id) => {\n    //console.log(\"calling changed name handler\");\n    const personIndex = this.state.persons.findIndex(p => {\n      return p.id === id;\n    });\n    \n    const person = {\n      ...this.state.persons[personIndex]\n    };\n    person.name = event.target.value;\n    const persons = {...this.state.persons};//-<---The error was here\n    persons[personIndex] = person; \n    this.setState({persons : persons});\n  }\n//This way may be inneficient () => this.switchNameHandler(\"Maximiliano!!!\")\n  */\n\nrender() {\n    /*const buttonOneStyle = {\n      backgroundColor:'green',\n      color:'white',\n      font:'inherit',\n      border:'1px solid blue',\n      padding:'8px',\n      cursor:'pointer',\n      ':hover':{\n        backgroundColor: 'lightgreen',\n        color: 'black'\n      }\n      \n    };*/\n\n    let persons = null;\n    let btnClass = '';\n    if(this.state.displayNames){\n      persons = (\n      <div>\n        {this.state.persons.map((person, index) => {\n         return <ErrorBoundary key = {person.id}><Person click={() => this.deletePersonHandler(index)}\n          name = {person.name} \n          age = {person.age}\n          \n          changed = {(event) => this.nameChangedHandler(event, person.id)} />\n          </ErrorBoundary>\n        })}\n      </div>\n      );   \n        \n      btnClass = classes.Red;\n        \n    }\n\n    let assignedClasses = [];\n    //changed name from classes since classes now refers to our input on top of the .css file\n    if(this.state.persons.length <= 2){\n      assignedClasses.push(classes.red); //classes = ['red']\n    }\n    if(this.state.persons.length <= 1){\n      assignedClasses.push(classes.bold);//classes = ['red', 'bold']\n    }\n    \n\n    return (\n     \n      <div className={classes.App}>\n        <h1>Hi, I'm a React App</h1>\n        <p className={assignedClasses.join(' ')}>This is really working again!</p>\n        \n        <button className={btnClass} onClick={this.toggleUsersHandler}>togglePersons</button>\n        \n          {persons}\n         \n          \n        \n      </div>\n      \n    );\n    // return React.createElement('div', {className: 'App'}, React.createElement('h1', null, 'Does this work now?'));\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}