{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\josel\\\\class-based\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"C:\\\\Users\\\\josel\\\\class-based\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\josel\\\\class-based\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\josel\\\\class-based\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\josel\\\\class-based\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\josel\\\\class-based\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\josel\\\\class-based\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"C:\\\\Users\\\\josel\\\\class-based\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\josel\\\\class-based\\\\src\\\\App.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n      background-color:cgreen;\\n      color:cwhite;\\n      font:cinherit;\\n      border:c1px solid blue;\\n      padding:c8px;\\n      cursor:cpointer;\\n      \\n      &:hover{\\n        background-color: lightgreen;\\n        color: black;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport './App.css';\nimport Person from './Person/Person';\nimport styled from 'styled-components';\nvar StyledButton = styled.button(_templateObject());\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      persons: [{\n        id: 'ewre1',\n        name: 'Max',\n        age: 28\n      }, {\n        id: 'ewre2',\n        name: 'Manu',\n        age: 29\n      }, {\n        id: 'ewre3',\n        name: 'Stephanie',\n        age: 26\n      }],\n      otherState: 'some other value',\n      displayNames: false\n    };\n\n    _this.toggleUsersHandler = function () {\n      var doesShow = _this.state.displayNames;\n\n      _this.setState({\n        displayNames: !doesShow\n      });\n    };\n\n    _this.deletePersonHandler = function (personIndex) {\n      //const persons = this.state.persons.slice();//Slice with no arguments simply creates a copy of the array\n      //You can use the spread operator instead\n      var persons = _toConsumableArray(_this.state.persons);\n\n      persons.splice(personIndex, 1);\n\n      _this.setState({\n        persons: persons\n      });\n    };\n\n    _this.nameChangedHandler = function (event, id) {\n      var personIndex = _this.state.persons.findIndex(function (p) {\n        return p.id === id;\n      });\n\n      var person = _objectSpread({}, _this.state.persons[personIndex]); // const person = Object.assign({}, this.state.persons[personIndex]);\n\n\n      person.name = event.target.value;\n\n      var persons = _toConsumableArray(_this.state.persons);\n\n      persons[personIndex] = person;\n\n      _this.setState({\n        persons: persons\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n\n    /*nameChangedHandler = (event, id) => {\n      //console.log(\"calling changed name handler\");\n      const personIndex = this.state.persons.findIndex(p => {\n        return p.id === id;\n      });\n      \n      const person = {\n        ...this.state.persons[personIndex]\n      };\n      person.name = event.target.value;\n      const persons = {...this.state.persons};//-<---The error was here\n      persons[personIndex] = person; \n      this.setState({persons : persons});\n    }\n    //This way may be inneficient () => this.switchNameHandler(\"Maximiliano!!!\")\n    */\n    value: function render() {\n      var _this2 = this;\n\n      var buttonOneStyle = {\n        backgroundColor: 'green',\n        color: 'white',\n        font: 'inherit',\n        border: '1px solid blue',\n        padding: '8px',\n        cursor: 'pointer',\n        ':hover': {\n          backgroundColor: 'lightgreen',\n          color: 'black'\n        }\n      };\n      var persons = null;\n\n      if (this.state.displayNames) {\n        persons = /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 7\n          }\n        }, this.state.persons.map(function (person, index) {\n          return /*#__PURE__*/React.createElement(Person, {\n            click: function click() {\n              return _this2.deletePersonHandler(index);\n            },\n            name: person.name,\n            age: person.age,\n            key: person.id,\n            changed: function changed(event) {\n              return _this2.nameChangedHandler(event, person.id);\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }\n          });\n        }));\n        buttonOneStyle.backgroundColor = 'red';\n        buttonOneStyle[':hover'] = {\n          backgroundColor: 'tomato',\n          color: 'black'\n        };\n      }\n\n      var classes = [];\n\n      if (this.state.persons.length <= 2) {\n        classes.push('red'); //classes = ['red']\n      }\n\n      if (this.state.persons.length <= 1) {\n        classes.push('bold'); //classes = ['red', 'bold']\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }\n      }, \"Hi, I'm a React App\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: classes.join(' '),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }\n      }, \"This is really working again!\"), /*#__PURE__*/React.createElement(StyledButton, {\n        onClick: this.toggleUsersHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }\n      }, \"togglePersons\"), persons); // return React.createElement('div', {className: 'App'}, React.createElement('h1', null, 'Does this work now?'));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:/Users/josel/class-based/src/App.js"],"names":["React","Component","Person","styled","StyledButton","button","App","state","persons","id","name","age","otherState","displayNames","toggleUsersHandler","doesShow","setState","deletePersonHandler","personIndex","splice","nameChangedHandler","event","findIndex","p","person","target","value","buttonOneStyle","backgroundColor","color","font","border","padding","cursor","map","index","classes","length","push","join"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Person from './Person/Person';\nimport styled from 'styled-components';\n\n\nconst StyledButton = styled.button`\n      background-color:cgreen;\n      color:cwhite;\n      font:cinherit;\n      border:c1px solid blue;\n      padding:c8px;\n      cursor:cpointer;\n      \n      &:hover{\n        background-color: lightgreen;\n        color: black;\n`;\n\nclass App extends Component {\n  state = {\n    persons: [\n      { id: 'ewre1', name: 'Max', age: 28 },\n      { id: 'ewre2', name: 'Manu', age: 29 },\n      { id: 'ewre3', name: 'Stephanie', age: 26 }\n    ],\n    otherState: 'some other value',\n    displayNames : false\n  };\n\n  toggleUsersHandler = ()=> {\n    const doesShow = this.state.displayNames;\n    this.setState({displayNames : !doesShow});\n  }\n\n  deletePersonHandler = (personIndex) => {\n    //const persons = this.state.persons.slice();//Slice with no arguments simply creates a copy of the array\n    //You can use the spread operator instead\n    const persons = [...this.state.persons];\n    persons.splice(personIndex, 1);\n    this.setState({persons : persons});\n  }\n\n  nameChangedHandler = ( event, id ) => {\n    const personIndex = this.state.persons.findIndex(p => {\n      return p.id === id;\n    });\n\n    const person = {\n      ...this.state.persons[personIndex]\n    };\n\n    // const person = Object.assign({}, this.state.persons[personIndex]);\n\n    person.name = event.target.value;\n\n    const persons = [...this.state.persons];\n    persons[personIndex] = person;\n\n    this.setState( {persons: persons} );\n  } \n\n  /*nameChangedHandler = (event, id) => {\n    //console.log(\"calling changed name handler\");\n    const personIndex = this.state.persons.findIndex(p => {\n      return p.id === id;\n    });\n    \n    const person = {\n      ...this.state.persons[personIndex]\n    };\n    person.name = event.target.value;\n    const persons = {...this.state.persons};//-<---The error was here\n    persons[personIndex] = person; \n    this.setState({persons : persons});\n  }\n//This way may be inneficient () => this.switchNameHandler(\"Maximiliano!!!\")\n  */\n\nrender() {\n    const buttonOneStyle = {\n      backgroundColor:'green',\n      color:'white',\n      font:'inherit',\n      border:'1px solid blue',\n      padding:'8px',\n      cursor:'pointer',\n      ':hover':{\n        backgroundColor: 'lightgreen',\n        color: 'black'\n      }\n      \n    };\n\n    let persons = null;\n    if(this.state.displayNames){\n      persons = (\n      <div>\n        {this.state.persons.map((person, index) => {\n         return <Person click={() => this.deletePersonHandler(index)}\n          name = {person.name} \n          age = {person.age}\n          key = {person.id}\n          changed = {(event) => this.nameChangedHandler(event, person.id)} />\n        })}\n      </div>\n      );   \n        buttonOneStyle.backgroundColor = 'red';\n        buttonOneStyle[':hover'] = {\n          backgroundColor: 'tomato',\n          color: 'black'\n        }\n    }\n\n    let classes = [];\n    if(this.state.persons.length <= 2){\n      classes.push('red'); //classes = ['red']\n    }\n    if(this.state.persons.length <= 1){\n      classes.push('bold');//classes = ['red', 'bold']\n    }\n    \n\n    return (\n     \n      <div className=\"App\">\n        <h1>Hi, I'm a React App</h1>\n        <p className={classes.join(' ')}>This is really working again!</p>\n        \n        <StyledButton  onClick={this.toggleUsersHandler}>togglePersons</StyledButton>\n        \n          {persons}\n         \n          \n        \n      </div>\n      \n    );\n    // return React.createElement('div', {className: 'App'}, React.createElement('h1', null, 'Does this work now?'));\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}